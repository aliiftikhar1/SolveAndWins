generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        Int      @id @default(autoincrement())
  name      String
  role      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// new tables 

model Competition {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  startedAt   DateTime?
  endedAt     DateTime?
  
  questions   Question[]
  participants Participant[]
  results     Result[]
}

model Question {
  id            Int       @id @default(autoincrement())
  competitionId Int
  qText         String
  key           String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  op1           String
  op2           String
  op3           String
  op4           String
  
  competition   Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
}

model User {
  id           Int       @id @default(autoincrement())
  fullname     String
  email        String    @unique
  password     String
  address      String?
  fathername   String?
  education    String?
  institute    String?
  dob          DateTime?
  city         String?
  province     String?
  fbProfile    String?
  tiktok       String?
  whatsappNo   String?
  country      String?

  participants Participant[]
  results      Result[]
  
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Result {
  id             Int       @id @default(autoincrement())
  competitionId  Int
  userId         Int
  noOfQuestions  Int
  correctAnswers Int
  score          Float
  timeAttempted  DateTime
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  competition    Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
  user           User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Participant {
  id             Int       @id @default(autoincrement())
  competitionId  Int
  userId         Int
  attemptCount   Int       @default(1)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  competition    Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
  user           User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}
